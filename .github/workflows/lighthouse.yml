name: Run Lighthouse
on:
    workflow_dispatch:
    schedule:
        - cron: "48 08 * * *"

jobs:
    run:
        name: Run Lighthouse
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.4
              with:
                  ref: ${{ github.head_ref }}
                  token: ${{ secrets.TOKEN }}

            - name: Analyze
              uses: foo-software/lighthouse-check-action@v4.0.0
              id: lighthouse
              continue-on-error: true
              with:
                  emulatedFormFactor: all
                  locale: en
                  prCommentEnabled: false
                  verbose: true
                  urls: >-
                      https://homeschool.rebeccareid.com,
                      https://homeschool.rebeccareid.com/posts/,
                      https://homeschool.rebeccareid.com/yes-you-can-homeschool/,
                      https://homeschool.rebeccareid.com/product/yes-you-can-homeschool-ecourse/,
                      https://homeschool.rebeccareid.com/vip/,
                      https://homeschool.rebeccareid.com/rebecca-reid/,
                      https://homeschool.rebeccareid.com/product/marco-polos-silk-road-game/,
                      https://homeschool.rebeccareid.com/courses/

            - name: Setup Node.JS
              uses: actions/setup-node@v2.4.0
              with:
                  node-version: 16
                  cache: "npm"

            - name: Install
              run: npm install --force

            - name: Comment
              if: steps.lighthouse.outcome == 'success'
              run:
                  node --trace-warnings --harmony .github/workflows/lighthouse.js '${{
                  secrets.TOKEN }}' '${{ join(steps.lighthouse.outputs.*, '\n') }}' ''

            - name: Comment
              if: steps.lighthouse.outcome != 'success'
              run:
                  node --trace-warnings --harmony .github/workflows/lighthouse.js '${{
                  secrets.TOKEN }}' '{}' '1'
